{"Name":"Tokens","HasStorage":true,"Storage":{"Prefix":"Tokens","Items":[{"Name":"TotalIssuance","Modifier":{"IsOptional":false,"IsDefault":true,"IsRequired":false},"Type":{"IsType":false,"AsType":"","IsMap":true,"AsMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":true,"IsIdentity":false},"Key":"T::CurrencyId","Value":"T::Balance","Linked":false},"IsDoubleMap":false,"AsDoubleMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key1":"","Key2":"","Value":"","Key2Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false}},"IsNMap":false,"AsNMap":{"Keys":null,"Hashers":null,"Value":""}},"Fallback":"AAAAAAAAAAAAAAAAAAAAAA==","Documentation":[" The total issuance of a token type."]},{"Name":"Locks","Modifier":{"IsOptional":false,"IsDefault":true,"IsRequired":false},"Type":{"IsType":false,"AsType":"","IsMap":false,"AsMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key":"","Value":"","Linked":false},"IsDoubleMap":true,"AsDoubleMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":true,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key1":"T::AccountId","Key2":"T::CurrencyId","Value":"BoundedVec\u003cBalanceLock\u003cT::Balance\u003e, T::MaxLocks\u003e","Key2Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":true,"IsIdentity":false}},"IsNMap":false,"AsNMap":{"Keys":null,"Hashers":null,"Value":""}},"Fallback":"AA==","Documentation":[" Any liquidity locks of a token type under an account."," NOTE: Should only be accessed when setting, changing and freeing a lock."]},{"Name":"Accounts","Modifier":{"IsOptional":false,"IsDefault":true,"IsRequired":false},"Type":{"IsType":false,"AsType":"","IsMap":false,"AsMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key":"","Value":"","Linked":false},"IsDoubleMap":true,"AsDoubleMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":true,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key1":"T::AccountId","Key2":"T::CurrencyId","Value":"AccountData\u003cT::Balance\u003e","Key2Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":true,"IsIdentity":false}},"IsNMap":false,"AsNMap":{"Keys":null,"Hashers":null,"Value":""}},"Fallback":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA","Documentation":[" The balance of a token type under an account.",""," NOTE: If the total is ever zero, decrease account ref account.",""," NOTE: This is only used in the case that this module is used to store"," balances."]}]},"HasCalls":true,"Calls":[{"Name":"transfer","Args":[{"Name":"dest","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"currency_id","Type":"T::CurrencyId"},{"Name":"amount","Type":"Compact\u003cT::Balance\u003e"}],"Documentation":[" Transfer some liquid free balance to another account.",""," `transfer` will set the `FreeBalance` of the sender and receiver."," It will decrease the total issuance of the system by the"," `TransferFee`. If the sender's account is below the existential"," deposit as a result of the transfer, the account will be reaped.",""," The dispatch origin for this call must be `Signed` by the"," transactor.",""," - `dest`: The recipient of the transfer."," - `currency_id`: currency type."," - `amount`: free balance amount to tranfer."]},{"Name":"transfer_all","Args":[{"Name":"dest","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"currency_id","Type":"T::CurrencyId"},{"Name":"keep_alive","Type":"bool"}],"Documentation":[" Transfer all remaining balance to the given account.",""," NOTE: This function only attempts to transfer _transferable_"," balances. This means that any locked, reserved, or existential"," deposits (when `keep_alive` is `true`), will not be transferred by"," this function. To ensure that this function results in a killed"," account, you might need to prepare the account by removing any"," reference counters, storage deposits, etc...",""," The dispatch origin for this call must be `Signed` by the"," transactor.",""," - `dest`: The recipient of the transfer."," - `currency_id`: currency type."," - `keep_alive`: A boolean to determine if the `transfer_all`","   operation should send all of the funds the account has, causing","   the sender account to be killed (false), or transfer everything","   except at least the existential deposit, which will guarantee to","   keep the sender account alive (true)."]},{"Name":"transfer_keep_alive","Args":[{"Name":"dest","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"currency_id","Type":"T::CurrencyId"},{"Name":"amount","Type":"Compact\u003cT::Balance\u003e"}],"Documentation":[" Same as the [`transfer`] call, but with a check that the transfer"," will not kill the origin account.",""," 99% of the time you want [`transfer`] instead.",""," The dispatch origin for this call must be `Signed` by the"," transactor.",""," - `dest`: The recipient of the transfer."," - `currency_id`: currency type."," - `amount`: free balance amount to tranfer."]},{"Name":"force_transfer","Args":[{"Name":"source","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"dest","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"currency_id","Type":"T::CurrencyId"},{"Name":"amount","Type":"Compact\u003cT::Balance\u003e"}],"Documentation":[" Exactly as `transfer`, except the origin must be root and the source"," account may be specified.",""," The dispatch origin for this call must be _Root_.",""," - `source`: The sender of the transfer."," - `dest`: The recipient of the transfer."," - `currency_id`: currency type."," - `amount`: free balance amount to tranfer."]},{"Name":"set_balance","Args":[{"Name":"who","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"currency_id","Type":"T::CurrencyId"},{"Name":"new_free","Type":"Compact\u003cT::Balance\u003e"},{"Name":"new_reserved","Type":"Compact\u003cT::Balance\u003e"}],"Documentation":[" Set the balances of a given account.",""," This will alter `FreeBalance` and `ReservedBalance` in storage. it"," will also decrease the total issuance of the system"," (`TotalIssuance`). If the new free or reserved balance is below the"," existential deposit, it will reap the `AccountInfo`.",""," The dispatch origin for this call is `root`."]}],"HasEvents":true,"Events":[{"Name":"Endowed","Args":["CurrencyId","AccountId","Balance"],"Documentation":[" An account was created with some free balance. \\[currency_id,"," account, free_balance\\]"]},{"Name":"DustLost","Args":["CurrencyId","AccountId","Balance"],"Documentation":[" An account was removed whose balance was non-zero but below"," ExistentialDeposit, resulting in an outright loss. \\[currency_id,"," account, balance\\]"]},{"Name":"Transfer","Args":["CurrencyId","AccountId","AccountId","Balance"],"Documentation":[" Transfer succeeded. \\[currency_id, from, to, value\\]"]},{"Name":"Reserved","Args":["CurrencyId","AccountId","Balance"],"Documentation":[" Some balance was reserved (moved from free to reserved)."," \\[currency_id, who, value\\]"]},{"Name":"Unreserved","Args":["CurrencyId","AccountId","Balance"],"Documentation":[" Some balance was unreserved (moved from reserved to free)."," \\[currency_id, who, value\\]"]},{"Name":"BalanceSet","Args":["CurrencyId","AccountId","Balance","Balance"],"Documentation":[" A balance was set by root. \\[who, free, reserved\\]"]}],"Constants":[{"Name":"MaxLocks","Type":"u32","Value":"MgAAAA==","Documentation":null}],"Errors":[{"Name":"BalanceTooLow","Documentation":[" The balance is too low"]},{"Name":"AmountIntoBalanceFailed","Documentation":[" Cannot convert Amount into Balance type"]},{"Name":"LiquidityRestrictions","Documentation":[" Failed because liquidity restrictions due to locking"]},{"Name":"MaxLocksExceeded","Documentation":[" Failed because the maximum locks was exceeded"]},{"Name":"KeepAlive","Documentation":[" Transfer/payment would kill account"]},{"Name":"ExistentialDeposit","Documentation":[" Value too low to create account due to existential deposit"]},{"Name":"DeadAccount","Documentation":[" Beneficiary account must pre-exist"]}],"Index":71}