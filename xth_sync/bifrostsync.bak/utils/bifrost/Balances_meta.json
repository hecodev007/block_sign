{"Name":"Balances","HasStorage":true,"Storage":{"Prefix":"Balances","Items":[{"Name":"TotalIssuance","Modifier":{"IsOptional":false,"IsDefault":true,"IsRequired":false},"Type":{"IsType":true,"AsType":"T::Balance","IsMap":false,"AsMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key":"","Value":"","Linked":false},"IsDoubleMap":false,"AsDoubleMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key1":"","Key2":"","Value":"","Key2Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false}},"IsNMap":false,"AsNMap":{"Keys":null,"Hashers":null,"Value":""}},"Fallback":"AAAAAAAAAAAAAAAAAAAAAA==","Documentation":[" The total units issued in the system."]},{"Name":"Account","Modifier":{"IsOptional":false,"IsDefault":true,"IsRequired":false},"Type":{"IsType":false,"AsType":"","IsMap":true,"AsMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":true,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key":"T::AccountId","Value":"AccountData\u003cT::Balance\u003e","Linked":false},"IsDoubleMap":false,"AsDoubleMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key1":"","Key2":"","Value":"","Key2Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false}},"IsNMap":false,"AsNMap":{"Keys":null,"Hashers":null,"Value":""}},"Fallback":"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==","Documentation":[" The balance of an account.",""," NOTE: This is only used in the case that this pallet is used to store balances."]},{"Name":"Locks","Modifier":{"IsOptional":false,"IsDefault":true,"IsRequired":false},"Type":{"IsType":false,"AsType":"","IsMap":true,"AsMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":true,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key":"T::AccountId","Value":"WeakBoundedVec\u003cBalanceLock\u003cT::Balance\u003e, T::MaxLocks\u003e","Linked":false},"IsDoubleMap":false,"AsDoubleMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key1":"","Key2":"","Value":"","Key2Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false}},"IsNMap":false,"AsNMap":{"Keys":null,"Hashers":null,"Value":""}},"Fallback":"AA==","Documentation":[" Any liquidity locks on some account balances."," NOTE: Should only be accessed when setting, changing and freeing a lock."]},{"Name":"Reserves","Modifier":{"IsOptional":false,"IsDefault":true,"IsRequired":false},"Type":{"IsType":false,"AsType":"","IsMap":true,"AsMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":true,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key":"T::AccountId","Value":"BoundedVec\u003cReserveData\u003cT::ReserveIdentifier, T::Balance\u003e, T::\nMaxReserves\u003e","Linked":false},"IsDoubleMap":false,"AsDoubleMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key1":"","Key2":"","Value":"","Key2Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false}},"IsNMap":false,"AsNMap":{"Keys":null,"Hashers":null,"Value":""}},"Fallback":"AA==","Documentation":[" Named reserves on some account balances."]},{"Name":"StorageVersion","Modifier":{"IsOptional":false,"IsDefault":true,"IsRequired":false},"Type":{"IsType":true,"AsType":"Releases","IsMap":false,"AsMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key":"","Value":"","Linked":false},"IsDoubleMap":false,"AsDoubleMap":{"Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false},"Key1":"","Key2":"","Value":"","Key2Hasher":{"IsBlake2_128":false,"IsBlake2_256":false,"IsBlake2_128Concat":false,"IsTwox128":false,"IsTwox256":false,"IsTwox64Concat":false,"IsIdentity":false}},"IsNMap":false,"AsNMap":{"Keys":null,"Hashers":null,"Value":""}},"Fallback":"AA==","Documentation":[" Storage version of the pallet.",""," This is set to v2.0.0 for new networks."]}]},"HasCalls":true,"Calls":[{"Name":"transfer","Args":[{"Name":"dest","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"value","Type":"Compact\u003cT::Balance\u003e"}],"Documentation":[" Transfer some liquid free balance to another account.",""," `transfer` will set the `FreeBalance` of the sender and receiver."," It will decrease the total issuance of the system by the `TransferFee`."," If the sender's account is below the existential deposit as a result"," of the transfer, the account will be reaped.",""," The dispatch origin for this call must be `Signed` by the transactor.",""," # \u003cweight\u003e"," - Dependent on arguments but not critical, given proper implementations for","   input config types. See related functions below."," - It contains a limited number of reads and writes internally and no complex computation.",""," Related functions:","","   - `ensure_can_withdraw` is always called internally but has a bounded complexity.","   - Transferring balances to accounts that did not exist before will cause","      `T::OnNewAccount::on_new_account` to be called.","   - Removing enough funds from an account will trigger `T::DustRemoval::on_unbalanced`.","   - `transfer_keep_alive` works the same way as `transfer`, but has an additional","     check that the transfer will not kill the origin account."," ---------------------------------"," - Base Weight: 73.64 µs, worst case scenario (account created, account removed)"," - DB Weight: 1 Read and 1 Write to destination account"," - Origin account is already in memory, so no DB operations for them."," # \u003c/weight\u003e"]},{"Name":"set_balance","Args":[{"Name":"who","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"new_free","Type":"Compact\u003cT::Balance\u003e"},{"Name":"new_reserved","Type":"Compact\u003cT::Balance\u003e"}],"Documentation":[" Set the balances of a given account.",""," This will alter `FreeBalance` and `ReservedBalance` in storage. it will"," also decrease the total issuance of the system (`TotalIssuance`)."," If the new free or reserved balance is below the existential deposit,"," it will reset the account nonce (`frame_system::AccountNonce`).",""," The dispatch origin for this call is `root`.",""," # \u003cweight\u003e"," - Independent of the arguments."," - Contains a limited number of reads and writes."," ---------------------"," - Base Weight:","     - Creating: 27.56 µs","     - Killing: 35.11 µs"," - DB Weight: 1 Read, 1 Write to `who`"," # \u003c/weight\u003e"]},{"Name":"force_transfer","Args":[{"Name":"source","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"dest","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"value","Type":"Compact\u003cT::Balance\u003e"}],"Documentation":[" Exactly as `transfer`, except the origin must be root and the source account may be"," specified."," # \u003cweight\u003e"," - Same as transfer, but additional read and write because the source account is","   not assumed to be in the overlay."," # \u003c/weight\u003e"]},{"Name":"transfer_keep_alive","Args":[{"Name":"dest","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"value","Type":"Compact\u003cT::Balance\u003e"}],"Documentation":[" Same as the [`transfer`] call, but with a check that the transfer will not kill the"," origin account.",""," 99% of the time you want [`transfer`] instead.",""," [`transfer`]: struct.Pallet.html#method.transfer"," # \u003cweight\u003e"," - Cheaper than transfer because account cannot be killed."," - Base Weight: 51.4 µs"," - DB Weight: 1 Read and 1 Write to dest (sender is in overlay already)"," #\u003c/weight\u003e"]},{"Name":"transfer_all","Args":[{"Name":"dest","Type":"\u003cT::Lookup as StaticLookup\u003e::Source"},{"Name":"keep_alive","Type":"bool"}],"Documentation":[" Transfer the entire transferable balance from the caller account.",""," NOTE: This function only attempts to transfer _transferable_ balances. This means that"," any locked, reserved, or existential deposits (when `keep_alive` is `true`), will not be"," transferred by this function. To ensure that this function results in a killed account,"," you might need to prepare the account by removing any reference counters, storage"," deposits, etc...",""," The dispatch origin of this call must be Signed.",""," - `dest`: The recipient of the transfer."," - `keep_alive`: A boolean to determine if the `transfer_all` operation should send all","   of the funds the account has, causing the sender account to be killed (false), or","   transfer everything except at least the existential deposit, which will guarantee to","   keep the sender account alive (true).","   # \u003cweight\u003e"," - O(1). Just like transfer, but reading the user's transferable balance first.","   #\u003c/weight\u003e"]}],"HasEvents":true,"Events":[{"Name":"Endowed","Args":["AccountId","Balance"],"Documentation":[" An account was created with some free balance. \\[account, free_balance\\]"]},{"Name":"DustLost","Args":["AccountId","Balance"],"Documentation":[" An account was removed whose balance was non-zero but below ExistentialDeposit,"," resulting in an outright loss. \\[account, balance\\]"]},{"Name":"Transfer","Args":["AccountId","AccountId","Balance"],"Documentation":[" Transfer succeeded. \\[from, to, value\\]"]},{"Name":"BalanceSet","Args":["AccountId","Balance","Balance"],"Documentation":[" A balance was set by root. \\[who, free, reserved\\]"]},{"Name":"Deposit","Args":["AccountId","Balance"],"Documentation":[" Some amount was deposited (e.g. for transaction fees). \\[who, deposit\\]"]},{"Name":"Reserved","Args":["AccountId","Balance"],"Documentation":[" Some balance was reserved (moved from free to reserved). \\[who, value\\]"]},{"Name":"Unreserved","Args":["AccountId","Balance"],"Documentation":[" Some balance was unreserved (moved from reserved to free). \\[who, value\\]"]},{"Name":"ReserveRepatriated","Args":["AccountId","AccountId","Balance","Status"],"Documentation":[" Some balance was moved from the reserve of the first account to the second account."," Final argument indicates the destination balance type."," \\[from, to, balance, destination_status\\]"]}],"Constants":[{"Name":"ExistentialDeposit","Type":"T::Balance","Value":"AOQLVAIAAAAAAAAAAAAAAA==","Documentation":[" The minimum amount required to keep an account open."]},{"Name":"MaxLocks","Type":"u32","Value":"MgAAAA==","Documentation":[" The maximum number of locks that should exist on an account."," Not strictly enforced, but used for weight estimation."]},{"Name":"MaxReserves","Type":"u32","Value":"MgAAAA==","Documentation":[" The maximum number of named reserves that can exist on an account."]}],"Errors":[{"Name":"VestingBalance","Documentation":[" Vesting balance too high to send value"]},{"Name":"LiquidityRestrictions","Documentation":[" Account liquidity restrictions prevent withdrawal"]},{"Name":"InsufficientBalance","Documentation":[" Balance too low to send value"]},{"Name":"ExistentialDeposit","Documentation":[" Value too low to create account due to existential deposit"]},{"Name":"KeepAlive","Documentation":[" Transfer/payment would kill account"]},{"Name":"ExistingVestingSchedule","Documentation":[" A vesting schedule already exists for this account"]},{"Name":"DeadAccount","Documentation":[" Beneficiary account must pre-exist"]},{"Name":"TooManyReserves","Documentation":[" Number of named reserves exceed MaxReserves"]}],"Index":10}