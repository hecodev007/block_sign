// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrderRequest struct {
	ApplyId              int64               `protobuf:"varint,1,opt,name=apply_id,json=applyId,proto3" json:"apply_id,omitempty"`
	ApplyCoinId          int64               `protobuf:"varint,2,opt,name=apply_coin_id,json=applyCoinId,proto3" json:"apply_coin_id,omitempty"`
	OuterOrderNo         string              `protobuf:"bytes,3,opt,name=outer_order_no,json=outerOrderNo,proto3" json:"outer_order_no,omitempty"`
	OrderNo              string              `protobuf:"bytes,4,opt,name=order_no,json=orderNo,proto3" json:"order_no,omitempty"`
	MchId                int64               `protobuf:"varint,5,opt,name=mch_id,json=mchId,proto3" json:"mch_id,omitempty"`
	MchName              string              `protobuf:"bytes,6,opt,name=mch_name,json=mchName,proto3" json:"mch_name,omitempty"`
	CoinName             string              `protobuf:"bytes,7,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	Worker               string              `protobuf:"bytes,8,opt,name=worker,proto3" json:"worker,omitempty"`
	AmountCode           string              `protobuf:"bytes,9,opt,name=amount_code,json=amountCode,proto3" json:"amount_code,omitempty"`
	OrderCode            string              `protobuf:"bytes,10,opt,name=order_code,json=orderCode,proto3" json:"order_code,omitempty"`
	Token                string              `protobuf:"bytes,11,opt,name=token,proto3" json:"token,omitempty"`
	Memo                 string              `protobuf:"bytes,12,opt,name=memo,proto3" json:"memo,omitempty"`
	Fee                  string              `protobuf:"bytes,13,opt,name=fee,proto3" json:"fee,omitempty"`
	Decimal              int32               `protobuf:"varint,14,opt,name=decimal,proto3" json:"decimal,omitempty"`
	OrderAddress         []*OrderAddrRequest `protobuf:"bytes,15,rep,name=order_address,json=orderAddress,proto3" json:"order_address,omitempty"`
	Extra                map[string]string   `protobuf:"bytes,16,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *OrderRequest) Reset()         { *m = OrderRequest{} }
func (m *OrderRequest) String() string { return proto.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()    {}
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *OrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRequest.Unmarshal(m, b)
}
func (m *OrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRequest.Marshal(b, m, deterministic)
}
func (m *OrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRequest.Merge(m, src)
}
func (m *OrderRequest) XXX_Size() int {
	return xxx_messageInfo_OrderRequest.Size(m)
}
func (m *OrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRequest proto.InternalMessageInfo

func (m *OrderRequest) GetApplyId() int64 {
	if m != nil {
		return m.ApplyId
	}
	return 0
}

func (m *OrderRequest) GetApplyCoinId() int64 {
	if m != nil {
		return m.ApplyCoinId
	}
	return 0
}

func (m *OrderRequest) GetOuterOrderNo() string {
	if m != nil {
		return m.OuterOrderNo
	}
	return ""
}

func (m *OrderRequest) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *OrderRequest) GetMchId() int64 {
	if m != nil {
		return m.MchId
	}
	return 0
}

func (m *OrderRequest) GetMchName() string {
	if m != nil {
		return m.MchName
	}
	return ""
}

func (m *OrderRequest) GetCoinName() string {
	if m != nil {
		return m.CoinName
	}
	return ""
}

func (m *OrderRequest) GetWorker() string {
	if m != nil {
		return m.Worker
	}
	return ""
}

func (m *OrderRequest) GetAmountCode() string {
	if m != nil {
		return m.AmountCode
	}
	return ""
}

func (m *OrderRequest) GetOrderCode() string {
	if m != nil {
		return m.OrderCode
	}
	return ""
}

func (m *OrderRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *OrderRequest) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *OrderRequest) GetFee() string {
	if m != nil {
		return m.Fee
	}
	return ""
}

func (m *OrderRequest) GetDecimal() int32 {
	if m != nil {
		return m.Decimal
	}
	return 0
}

func (m *OrderRequest) GetOrderAddress() []*OrderAddrRequest {
	if m != nil {
		return m.OrderAddress
	}
	return nil
}

func (r *OrderRequest) GetToOrderAddress() []*OrderAddrRequest {
	var addrs []*OrderAddrRequest
	for _, v := range r.OrderAddress {
		if v.Dir == 1 {
			addrs = append(addrs, v)
		}
	}
	return addrs
}

func (r *OrderRequest) GetFromOrderAddress() []*OrderAddrRequest {
	var addrs []*OrderAddrRequest
	for _, v := range r.OrderAddress {
		if v.Dir == 0 {
			addrs = append(addrs, v)
		}
	}
	return addrs
}

func (r *OrderRequest) GetChangeOrderAddress() []*OrderAddrRequest {
	var addrs []*OrderAddrRequest
	for _, v := range r.OrderAddress {
		if v.Dir == 2 {
			addrs = append(addrs, v)
		}
	}
	return addrs
}

func (m *OrderRequest) GetExtra() map[string]string {
	if m != nil {
		return m.Extra
	}
	return nil
}

type OrderAddrRequest struct {
	Dir                  int32             `protobuf:"varint,1,opt,name=dir,proto3" json:"dir,omitempty"`
	Address              string            `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Amount               string            `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	TokenAmount          string            `protobuf:"bytes,4,opt,name=token_amount,json=tokenAmount,proto3" json:"token_amount,omitempty"`
	TxId                 string            `protobuf:"bytes,5,opt,name=txId,proto3" json:"txId,omitempty"`
	Vout                 int32             `protobuf:"varint,6,opt,name=vout,proto3" json:"vout,omitempty"`
	InnerExtra           map[string]string `protobuf:"bytes,7,rep,name=inner_extra,json=innerExtra,proto3" json:"inner_extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OrderAddrRequest) Reset()         { *m = OrderAddrRequest{} }
func (m *OrderAddrRequest) String() string { return proto.CompactTextString(m) }
func (*OrderAddrRequest) ProtoMessage()    {}
func (*OrderAddrRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *OrderAddrRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderAddrRequest.Unmarshal(m, b)
}
func (m *OrderAddrRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderAddrRequest.Marshal(b, m, deterministic)
}
func (m *OrderAddrRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderAddrRequest.Merge(m, src)
}
func (m *OrderAddrRequest) XXX_Size() int {
	return xxx_messageInfo_OrderAddrRequest.Size(m)
}
func (m *OrderAddrRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderAddrRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderAddrRequest proto.InternalMessageInfo

func (m *OrderAddrRequest) GetDir() int32 {
	if m != nil {
		return m.Dir
	}
	return 0
}

func (m *OrderAddrRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *OrderAddrRequest) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *OrderAddrRequest) GetTokenAmount() string {
	if m != nil {
		return m.TokenAmount
	}
	return ""
}

func (m *OrderAddrRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *OrderAddrRequest) GetVout() int32 {
	if m != nil {
		return m.Vout
	}
	return 0
}

func (m *OrderAddrRequest) GetInnerExtra() map[string]string {
	if m != nil {
		return m.InnerExtra
	}
	return nil
}

type ResponseOrder struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Data                 int64    `protobuf:"varint,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseOrder) Reset()         { *m = ResponseOrder{} }
func (m *ResponseOrder) String() string { return proto.CompactTextString(m) }
func (*ResponseOrder) ProtoMessage()    {}
func (*ResponseOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *ResponseOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseOrder.Unmarshal(m, b)
}
func (m *ResponseOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseOrder.Marshal(b, m, deterministic)
}
func (m *ResponseOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseOrder.Merge(m, src)
}
func (m *ResponseOrder) XXX_Size() int {
	return xxx_messageInfo_ResponseOrder.Size(m)
}
func (m *ResponseOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseOrder proto.InternalMessageInfo

func (m *ResponseOrder) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseOrder) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResponseOrder) GetData() int64 {
	if m != nil {
		return m.Data
	}
	return 0
}

//普通返回
type ResponseMsg struct {
	Code                 int32    `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseMsg) Reset()         { *m = ResponseMsg{} }
func (m *ResponseMsg) String() string { return proto.CompactTextString(m) }
func (*ResponseMsg) ProtoMessage()    {}
func (*ResponseMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *ResponseMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseMsg.Unmarshal(m, b)
}
func (m *ResponseMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseMsg.Marshal(b, m, deterministic)
}
func (m *ResponseMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseMsg.Merge(m, src)
}
func (m *ResponseMsg) XXX_Size() int {
	return xxx_messageInfo_ResponseMsg.Size(m)
}
func (m *ResponseMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseMsg proto.InternalMessageInfo

func (m *ResponseMsg) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResponseMsg) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*OrderRequest)(nil), "proto.OrderRequest")
	proto.RegisterMapType((map[string]string)(nil), "proto.OrderRequest.ExtraEntry")
	proto.RegisterType((*OrderAddrRequest)(nil), "proto.OrderAddrRequest")
	proto.RegisterMapType((map[string]string)(nil), "proto.OrderAddrRequest.InnerExtraEntry")
	proto.RegisterType((*ResponseOrder)(nil), "proto.ResponseOrder")
	proto.RegisterType((*ResponseMsg)(nil), "proto.ResponseMsg")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x6e, 0x9a, 0x38, 0x89, 0xc7, 0x49, 0x5b, 0x2d, 0x05, 0x96, 0x20, 0x20, 0x44, 0x48, 0xe4,
	0x94, 0x43, 0xe9, 0xa1, 0xe2, 0xe7, 0x50, 0x95, 0x4a, 0xcd, 0x21, 0xad, 0xd8, 0x17, 0x88, 0x16,
	0xef, 0xd0, 0x5a, 0x89, 0xbd, 0x61, 0xd7, 0x29, 0xad, 0xc4, 0x13, 0xf1, 0x06, 0xbc, 0x1d, 0x9a,
	0x59, 0xbb, 0x94, 0xaa, 0x1c, 0x7a, 0xf2, 0xcc, 0xf7, 0xcd, 0x7e, 0x3b, 0xfb, 0xcd, 0x18, 0x7a,
	0x1e, 0xdd, 0x25, 0xba, 0xc9, 0xca, 0xd9, 0xd2, 0x8a, 0x88, 0x3f, 0xa3, 0xdf, 0x2d, 0xe8, 0x9d,
	0x39, 0x83, 0x4e, 0xe1, 0xf7, 0x35, 0xfa, 0x52, 0x3c, 0x83, 0xae, 0x5e, 0xad, 0x96, 0xd7, 0xf3,
	0xcc, 0xc8, 0xc6, 0xb0, 0x31, 0x6e, 0xaa, 0x0e, 0xe7, 0x53, 0x23, 0x46, 0xd0, 0x0f, 0x54, 0x6a,
	0xb3, 0x82, 0xf8, 0x4d, 0xe6, 0x13, 0x06, 0x8f, 0x6c, 0x56, 0x4c, 0x8d, 0x78, 0x03, 0x5b, 0x76,
	0x5d, 0xa2, 0x9b, 0x5b, 0x12, 0x9d, 0x17, 0x56, 0x36, 0x87, 0x8d, 0x71, 0xac, 0x7a, 0x8c, 0xf2,
	0x4d, 0xa7, 0x96, 0x2e, 0xb9, 0xe1, 0x5b, 0xcc, 0x77, 0x6c, 0x45, 0x3d, 0x86, 0x76, 0x9e, 0x5e,
	0x90, 0x7a, 0xc4, 0xea, 0x51, 0x9e, 0x5e, 0x4c, 0x0d, 0x9d, 0x20, 0xb8, 0xd0, 0x39, 0xca, 0x76,
	0x38, 0x91, 0xa7, 0x17, 0xa7, 0x3a, 0x47, 0xf1, 0x1c, 0x62, 0x6e, 0x88, 0xb9, 0x0e, 0x73, 0x5d,
	0x02, 0x98, 0x7c, 0x02, 0xed, 0x1f, 0xd6, 0x2d, 0xd0, 0xc9, 0x2e, 0x33, 0x55, 0x26, 0x5e, 0x41,
	0xa2, 0x73, 0xbb, 0x2e, 0xca, 0x79, 0x6a, 0x0d, 0xca, 0x98, 0x49, 0x08, 0xd0, 0x91, 0x35, 0x28,
	0x5e, 0x00, 0x84, 0x16, 0x99, 0x07, 0xe6, 0x63, 0x46, 0x98, 0xde, 0x85, 0xa8, 0xb4, 0x0b, 0x2c,
	0x64, 0xc2, 0x4c, 0x48, 0x84, 0x80, 0x56, 0x8e, 0xb9, 0x95, 0x3d, 0x06, 0x39, 0x16, 0x3b, 0xd0,
	0xfc, 0x86, 0x28, 0xfb, 0x0c, 0x51, 0x28, 0x24, 0x74, 0x0c, 0xa6, 0x59, 0xae, 0x97, 0x72, 0x6b,
	0xd8, 0x18, 0x47, 0xaa, 0x4e, 0xc5, 0x47, 0xe8, 0x87, 0x4b, 0xb5, 0x31, 0x0e, 0xbd, 0x97, 0xdb,
	0xc3, 0xe6, 0x38, 0xd9, 0x7b, 0x1a, 0x66, 0x36, 0x61, 0xfb, 0x0e, 0x8d, 0xa9, 0x87, 0xa5, 0x7a,
	0xb6, 0x46, 0xd0, 0x7b, 0xb1, 0x0f, 0x11, 0x5e, 0x95, 0x4e, 0xcb, 0x1d, 0x3e, 0xf5, 0xf2, 0xf6,
	0xa9, 0xea, 0xc4, 0xe4, 0x98, 0x0a, 0x8e, 0x8b, 0xd2, 0x5d, 0xab, 0x50, 0x3c, 0x38, 0x00, 0xf8,
	0x0b, 0x52, 0xb7, 0x0b, 0xbc, 0xe6, 0xc9, 0xc7, 0x8a, 0x42, 0x7a, 0xe9, 0xa5, 0x5e, 0xae, 0x91,
	0xa7, 0x1d, 0xab, 0x90, 0xbc, 0xdf, 0x3c, 0x68, 0x8c, 0x7e, 0x6d, 0xc2, 0xce, 0xdd, 0x96, 0x48,
	0xc0, 0x64, 0x8e, 0x05, 0x22, 0x45, 0x21, 0x3d, 0xb7, 0x7e, 0x4e, 0x90, 0xa8, 0x53, 0x1a, 0x4e,
	0x70, 0xbc, 0x5a, 0x92, 0x2a, 0x13, 0xaf, 0xa1, 0xc7, 0x7e, 0xce, 0x2b, 0x36, 0xac, 0x48, 0xc2,
	0xd8, 0x61, 0x28, 0x11, 0xd0, 0x2a, 0xaf, 0xa6, 0x61, 0x49, 0x62, 0xc5, 0x31, 0x61, 0x97, 0x76,
	0x5d, 0xf2, 0x7e, 0x44, 0x8a, 0x63, 0x71, 0x02, 0x49, 0x56, 0x14, 0xe8, 0xe6, 0xc1, 0x99, 0x0e,
	0x3b, 0xf3, 0xf6, 0x3f, 0x7e, 0x4e, 0xa6, 0x54, 0x7a, 0xcb, 0x22, 0xc8, 0x6e, 0x80, 0xc1, 0x27,
	0xd8, 0xbe, 0x43, 0x3f, 0xc8, 0xac, 0x2f, 0xd0, 0x57, 0xe8, 0x57, 0xb6, 0xf0, 0xc8, 0xd7, 0x52,
	0xb7, 0xb4, 0x49, 0x95, 0x53, 0x1c, 0x93, 0x55, 0x33, 0xf4, 0x5e, 0x9f, 0xd7, 0x02, 0x75, 0x4a,
	0xd5, 0x9f, 0x75, 0xa9, 0xd9, 0xa8, 0xa6, 0xe2, 0x78, 0xf4, 0x01, 0x92, 0x5a, 0x72, 0xe6, 0xcf,
	0x1f, 0x26, 0xb8, 0xf7, 0x13, 0x80, 0xfb, 0x98, 0x69, 0xfa, 0x1d, 0x0e, 0x20, 0xa6, 0x20, 0x74,
	0xf6, 0xe8, 0x9e, 0xc5, 0x19, 0xec, 0x56, 0xe0, 0x3f, 0x8f, 0x18, 0x6d, 0x88, 0x7d, 0xe8, 0x9e,
	0xe8, 0xc2, 0x2c, 0xf1, 0x6c, 0x21, 0xc4, 0x9d, 0x9a, 0x99, 0x3f, 0x1f, 0xdc, 0x83, 0x8d, 0x36,
	0xbe, 0xb6, 0x19, 0x7c, 0xf7, 0x27, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x88, 0x8a, 0x43, 0x94, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderMakerClient is the client API for OrderMaker service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderMakerClient interface {
	//创建订单
	MakeOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*ResponseOrder, error)
	//心跳
	HandleOk(ctx context.Context, in *ResponseMsg, opts ...grpc.CallOption) (*ResponseMsg, error)
}

type orderMakerClient struct {
	cc *grpc.ClientConn
}

func NewOrderMakerClient(cc *grpc.ClientConn) OrderMakerClient {
	return &orderMakerClient{cc}
}

func (c *orderMakerClient) MakeOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*ResponseOrder, error) {
	out := new(ResponseOrder)
	err := c.cc.Invoke(ctx, "/proto.OrderMaker/MakeOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderMakerClient) HandleOk(ctx context.Context, in *ResponseMsg, opts ...grpc.CallOption) (*ResponseMsg, error) {
	out := new(ResponseMsg)
	err := c.cc.Invoke(ctx, "/proto.OrderMaker/HandleOk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderMakerServer is the server API for OrderMaker service.
type OrderMakerServer interface {
	//创建订单
	MakeOrder(context.Context, *OrderRequest) (*ResponseOrder, error)
	//心跳
	HandleOk(context.Context, *ResponseMsg) (*ResponseMsg, error)
}

// UnimplementedOrderMakerServer can be embedded to have forward compatible implementations.
type UnimplementedOrderMakerServer struct {
}

func (*UnimplementedOrderMakerServer) MakeOrder(ctx context.Context, req *OrderRequest) (*ResponseOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakeOrder not implemented")
}
func (*UnimplementedOrderMakerServer) HandleOk(ctx context.Context, req *ResponseMsg) (*ResponseMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleOk not implemented")
}

func RegisterOrderMakerServer(s *grpc.Server, srv OrderMakerServer) {
	s.RegisterService(&_OrderMaker_serviceDesc, srv)
}

func _OrderMaker_MakeOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderMakerServer).MakeOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OrderMaker/MakeOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderMakerServer).MakeOrder(ctx, req.(*OrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderMaker_HandleOk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResponseMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderMakerServer).HandleOk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.OrderMaker/HandleOk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderMakerServer).HandleOk(ctx, req.(*ResponseMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderMaker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.OrderMaker",
	HandlerType: (*OrderMakerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeOrder",
			Handler:    _OrderMaker_MakeOrder_Handler,
		},
		{
			MethodName: "HandleOk",
			Handler:    _OrderMaker_HandleOk_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
