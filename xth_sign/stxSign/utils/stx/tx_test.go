package stx

import (
	"crypto/elliptic"
	"encoding/hex"
	"github.com/ethereum/go-ethereum/crypto/secp256k1"
	"testing"
)

func Test_tx(t *testing.T){
	tx := &Transaction{
		Version: 0x80,
		Chainid: 0x80000000,
	}
	_,pkh,err:=C32_check_decode("STA3WN1J8FFWV302M4NDFTHQ3F87QJ8XZ6E286WJ")
	if err != nil {
		panic(err.Error())
	}
	copy(tx.Auth.Signer[:],pkh[0:20])
	tx.Auth.Type=0x04
	tx.Auth.HashModel=0x02
	t.Log(hex.EncodeToString(tx.Serialize()))
	txid := tx.Txid()
	t.Log(len(txid),txid)
}
func Test_addr(t *testing.T){
	bytes,_ := hex.DecodeString("ffffffffffffffffffffffffffffffffffffffff")
	t.Log(C32_check_encode(1,bytes))
}
func Test_sign(t *testing.T){
	txid :="fb4b6793bceafe22136602af5bc2a906efaf849d400d447b897a69186d947d3e"
	pri :="9a05741dbfeecbac7055aadceb8e192410c15b45b8379d5b503d29be294d97f1"
	pribytes ,_:= hex.DecodeString(pri)
	t.Log(len(pribytes))
	sigtrue2,_ :=hex.DecodeString("004e5f96b6ff51388624b98dbd2a2033908db3f0c5a2f8d9bfc8a59fdb6750e0d849198faf8309809b98de8b275fb10ff571f3588a5fb510b521cc02aa1841300d")
	sigtrue3,_ :=hex.DecodeString("304402204e5f96b6ff51388624b98dbd2a2033908db3f0c5a2f8d9bfc8a59fdb6750e0d8022049198faf8309809b98de8b275fb10ff571f3588a5fb510b521cc02aa1841300d")
	_=sigtrue2
	prikey,err := HexToPri(pri)
	if err != nil{
		panic(err.Error())
	}
	hash,_:= hex.DecodeString(txid)
	sigtrue,err :=secp256k1.Sign(hash,pribytes)
	if err != nil {
		panic(err.Error())
	}
	t.Log(hex.EncodeToString(sigtrue))
	pubkey := prikey.PublicKey
	pubytes :=elliptic.Marshal(secp256k1.S256(),pubkey.X,pubkey.Y)
	t.Log(hex.EncodeToString(pubytes))
	//sign ,_:= hex.DecodeString(sig)
	repub,err :=secp256k1.RecoverPubkey(hash,sigtrue2)
	repub3,err :=secp256k1.RecoverPubkey(hash,sigtrue3)
	t.Log(pubytes)
	t.Log(repub)
	t.Log(repub3)
	//821651fe9411b93c6e8c946a8ea1f3472ade8c2b781a33b3e34cc7fae74ddb8165114cf4b1e17a8dfedec2db5b82fa1fff0c9edb0c3665d12f291524df03aa7600

}
//80800000000400143e543243dfcd8c02a12ad7ea371bd07bc91df900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030100000000000501ffffffffffffffffffffffffffffffffffffffff000000000000007b00000000000000000000000000000000000000000000000000000000000000000000
//80800000000402143e543243dfcd8c02a12ad7ea371bd07bc91df9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
//80800000000402143e543243dfcd8c02a12ad7ea371bd07bc91df9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000